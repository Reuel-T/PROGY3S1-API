// <auto-generated />
using System;
using ACME_WebApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ACME_WebApi.Migrations
{
    [DbContext(typeof(PROG7311T2Context))]
    [Migration("20210613182245_ImageURLAdded")]
    partial class ImageURLAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ACME_WebApi.Models.Category", b =>
                {
                    b.Property<int>("Cid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)");

                    b.HasKey("Cid")
                        .HasName("PK__Category__C1F8DC59A393893F");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("ACME_WebApi.Models.Product", b =>
                {
                    b.Property<int>("Pid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cid")
                        .HasColumnType("int")
                        .HasColumnName("CID");

                    b.Property<string>("Description")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.HasKey("Pid")
                        .HasName("PK__Product__C5775520E28A45CA");

                    b.HasIndex("Cid");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("ACME_WebApi.Models.ProductOrder", b =>
                {
                    b.Property<int>("Oid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<int>("Pid")
                        .HasColumnType("int")
                        .HasColumnName("PID");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<int>("Uid")
                        .HasColumnType("int")
                        .HasColumnName("UID");

                    b.HasKey("Oid")
                        .HasName("PK__ProductO__CB394B3944DB71C8");

                    b.HasIndex("Pid");

                    b.HasIndex("Uid");

                    b.ToTable("ProductOrder");
                });

            modelBuilder.Entity("ACME_WebApi.Models.Role", b =>
                {
                    b.Property<int>("Rid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)");

                    b.HasKey("Rid")
                        .HasName("PK__Role__CAFF41327BDE56F8");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("ACME_WebApi.Models.ShoppingCart", b =>
                {
                    b.Property<int>("Sid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Pid")
                        .HasColumnType("int")
                        .HasColumnName("PID");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<int>("Uid")
                        .HasColumnType("int")
                        .HasColumnName("UID");

                    b.HasKey("Sid")
                        .HasName("PK__Shopping__CA195970045AB45D");

                    b.HasIndex("Pid");

                    b.HasIndex("Uid");

                    b.ToTable("ShoppingCart");
                });

            modelBuilder.Entity("ACME_WebApi.Models.User", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Rid")
                        .HasColumnType("int")
                        .HasColumnName("RID");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)");

                    b.HasKey("Uid")
                        .HasName("PK__User__C5B19602C3549369");

                    b.HasIndex("Rid");

                    b.HasIndex(new[] { "Username" }, "UQ__User__536C85E402946CCB")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("ACME_WebApi.Models.Wishlist", b =>
                {
                    b.Property<int>("Wid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Pid")
                        .HasColumnType("int")
                        .HasColumnName("PID");

                    b.Property<int>("Uid")
                        .HasColumnType("int")
                        .HasColumnName("UID");

                    b.HasKey("Wid")
                        .HasName("PK__Wishlist__DB376519C2C455DD");

                    b.HasIndex("Pid");

                    b.HasIndex("Uid");

                    b.ToTable("Wishlist");
                });

            modelBuilder.Entity("ACME_WebApi.Models.Product", b =>
                {
                    b.HasOne("ACME_WebApi.Models.Category", "CidNavigation")
                        .WithMany("Products")
                        .HasForeignKey("Cid")
                        .HasConstraintName("FK__Product__CID__1273C1CD")
                        .IsRequired();

                    b.Navigation("CidNavigation");
                });

            modelBuilder.Entity("ACME_WebApi.Models.ProductOrder", b =>
                {
                    b.HasOne("ACME_WebApi.Models.Product", "PidNavigation")
                        .WithMany("ProductOrders")
                        .HasForeignKey("Pid")
                        .HasConstraintName("FK__ProductOrde__PID__239E4DCF")
                        .IsRequired();

                    b.HasOne("ACME_WebApi.Models.User", "UidNavigation")
                        .WithMany("ProductOrders")
                        .HasForeignKey("Uid")
                        .HasConstraintName("FK__ProductOrde__UID__24927208")
                        .IsRequired();

                    b.Navigation("PidNavigation");

                    b.Navigation("UidNavigation");
                });

            modelBuilder.Entity("ACME_WebApi.Models.ShoppingCart", b =>
                {
                    b.HasOne("ACME_WebApi.Models.Product", "PidNavigation")
                        .WithMany("ShoppingCarts")
                        .HasForeignKey("Pid")
                        .HasConstraintName("FK__ShoppingCar__PID__286302EC")
                        .IsRequired();

                    b.HasOne("ACME_WebApi.Models.User", "UidNavigation")
                        .WithMany("ShoppingCarts")
                        .HasForeignKey("Uid")
                        .HasConstraintName("FK__ShoppingCar__UID__276EDEB3")
                        .IsRequired();

                    b.Navigation("PidNavigation");

                    b.Navigation("UidNavigation");
                });

            modelBuilder.Entity("ACME_WebApi.Models.User", b =>
                {
                    b.HasOne("ACME_WebApi.Models.Role", "RidNavigation")
                        .WithMany("Users")
                        .HasForeignKey("Rid")
                        .HasConstraintName("FK__User__RID__182C9B23")
                        .IsRequired();

                    b.Navigation("RidNavigation");
                });

            modelBuilder.Entity("ACME_WebApi.Models.Wishlist", b =>
                {
                    b.HasOne("ACME_WebApi.Models.Product", "PidNavigation")
                        .WithMany("Wishlists")
                        .HasForeignKey("Pid")
                        .HasConstraintName("FK__Wishlist__PID__2C3393D0")
                        .IsRequired();

                    b.HasOne("ACME_WebApi.Models.User", "UidNavigation")
                        .WithMany("Wishlists")
                        .HasForeignKey("Uid")
                        .HasConstraintName("FK__Wishlist__UID__2B3F6F97")
                        .IsRequired();

                    b.Navigation("PidNavigation");

                    b.Navigation("UidNavigation");
                });

            modelBuilder.Entity("ACME_WebApi.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ACME_WebApi.Models.Product", b =>
                {
                    b.Navigation("ProductOrders");

                    b.Navigation("ShoppingCarts");

                    b.Navigation("Wishlists");
                });

            modelBuilder.Entity("ACME_WebApi.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ACME_WebApi.Models.User", b =>
                {
                    b.Navigation("ProductOrders");

                    b.Navigation("ShoppingCarts");

                    b.Navigation("Wishlists");
                });
#pragma warning restore 612, 618
        }
    }
}
